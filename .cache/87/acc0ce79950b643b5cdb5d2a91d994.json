{"id":"../node_modules/airbnb-prop-types/build/uniqueArrayOf.js","dependencies":[{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\uniqueArrayOf.js.map","includedInParent":true,"mtime":1552029750668},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\package.json","includedInParent":true,"mtime":1552391975889},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\.babelrc","includedInParent":true,"mtime":1552388372836},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\package.json","includedInParent":true,"mtime":1552029750668},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\.babelrc","includedInParent":true,"mtime":1552029750668},{"name":"prop-types","loc":{"line":8,"column":25},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\uniqueArrayOf.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\prop-types\\index.js"},{"name":"./and","loc":{"line":10,"column":42},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\uniqueArrayOf.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\and.js"},{"name":"./uniqueArray","loc":{"line":12,"column":50},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\uniqueArrayOf.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\uniqueArray.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = uniqueArrayOfTypeValidator;\n\nvar _propTypes = require(\"prop-types\");\n\nvar _and = _interopRequireDefault(require(\"./and\"));\n\nvar _uniqueArray = _interopRequireDefault(require(\"./uniqueArray\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar unique = (0, _uniqueArray[\"default\"])();\n\nfunction uniqueArrayOfTypeValidator(type) {\n  if (typeof type !== 'function') {\n    throw new TypeError('type must be a validator function');\n  }\n\n  var mapper = null;\n  var name = 'uniqueArrayOfType';\n\n  for (var _len = arguments.length, rest = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    rest[_key - 1] = arguments[_key];\n  }\n\n  if (rest.length === 1) {\n    if (typeof rest[0] === 'function') {\n      mapper = rest[0];\n    } else if (typeof rest[0] === 'string') {\n      name = rest[0];\n    } else {\n      throw new TypeError('single input must either be string or function');\n    }\n  } else if (rest.length === 2) {\n    if (typeof rest[0] === 'function' && typeof rest[1] === 'string') {\n      mapper = rest[0];\n      name = rest[1];\n    } else {\n      throw new TypeError('multiple inputs must be in [function, string] order');\n    }\n  } else if (rest.length > 2) {\n    throw new TypeError('only [], [name], [mapper], and [mapper, name] are valid inputs');\n  }\n\n  function uniqueArrayOfMapped(props, propName) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return null;\n    }\n\n    var values = propValue.map(mapper);\n\n    for (var _len2 = arguments.length, args = new Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n      args[_key2 - 2] = arguments[_key2];\n    }\n\n    return unique.apply(void 0, [_objectSpread({}, props, _defineProperty({}, propName, values)), propName].concat(args));\n  }\n\n  uniqueArrayOfMapped.isRequired = function isRequired(props, propName) {\n    var propValue = props[propName];\n\n    for (var _len3 = arguments.length, args = new Array(_len3 > 2 ? _len3 - 2 : 0), _key3 = 2; _key3 < _len3; _key3++) {\n      args[_key3 - 2] = arguments[_key3];\n    }\n\n    if (propValue == null) {\n      return _propTypes.array.isRequired.apply(_propTypes.array, [props, propName].concat(args));\n    }\n\n    return uniqueArrayOfMapped.apply(void 0, [props, propName].concat(args));\n  };\n\n  var arrayValidator = (0, _propTypes.arrayOf)(type);\n  var uniqueValidator = mapper ? uniqueArrayOfMapped : unique;\n  var validator = (0, _and[\"default\"])([arrayValidator, uniqueValidator], name);\n  validator.isRequired = (0, _and[\"default\"])([uniqueValidator.isRequired, arrayValidator.isRequired], \"\".concat(name, \".isRequired\"));\n  return validator;\n}\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/uniqueArrayOf.js"],"names":["unique","uniqueArrayOfTypeValidator","type","TypeError","mapper","name","rest","length","uniqueArrayOfMapped","props","propName","propValue","values","map","args","isRequired","array","arrayValidator","uniqueValidator","validator"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAEA,IAAMA,MAAM,GAAG,8BAAf;;AAEe,SAASC,0BAAT,CAAoCC,IAApC,EAAmD;AAChE,MAAI,OAAOA,IAAP,KAAgB,UAApB,EAAgC;AAC9B,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AACD;;AAED,MAAIC,MAAM,GAAG,IAAb;AACA,MAAIC,IAAI,GAAG,mBAAX;;AANgE,oCAANC,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAQhE,MAAIA,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AACrB,QAAI,OAAOD,IAAI,CAAC,CAAD,CAAX,KAAmB,UAAvB,EAAmC;AAC/BF,MAAAA,MAD+B,GACrBE,IADqB;AAElC,KAFD,MAEO,IAAI,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAvB,EAAiC;AACpCD,MAAAA,IADoC,GAC5BC,IAD4B;AAEvC,KAFM,MAEA;AACL,YAAM,IAAIH,SAAJ,CAAc,gDAAd,CAAN;AACD;AACF,GARD,MAQO,IAAIG,IAAI,CAACC,MAAL,KAAgB,CAApB,EAAuB;AAC5B,QAAI,OAAOD,IAAI,CAAC,CAAD,CAAX,KAAmB,UAAnB,IAAiC,OAAOA,IAAI,CAAC,CAAD,CAAX,KAAmB,QAAxD,EAAkE;AAC9DF,MAAAA,MAD8D,GAC9CE,IAD8C;AACtDD,MAAAA,IADsD,GAC9CC,IAD8C;AAEjE,KAFD,MAEO;AACL,YAAM,IAAIH,SAAJ,CAAc,qDAAd,CAAN;AACD;AACF,GANM,MAMA,IAAIG,IAAI,CAACC,MAAL,GAAc,CAAlB,EAAqB;AAC1B,UAAM,IAAIJ,SAAJ,CAAc,gEAAd,CAAN;AACD;;AAED,WAASK,mBAAT,CAA6BC,KAA7B,EAAoCC,QAApC,EAAuD;AAAA,QACjCC,SADiC,GACnBF,KADmB,CAC5CC,QAD4C;;AAErD,QAAIC,SAAS,IAAI,IAAjB,EAAuB;AACrB,aAAO,IAAP;AACD;;AAED,QAAMC,MAAM,GAAGD,SAAS,CAACE,GAAV,CAAcT,MAAd,CAAf;;AANqD,uCAANU,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAOrD,WAAOd,MAAM,MAAN,4BAAYS,KAAZ,sBAAoBC,QAApB,EAA+BE,MAA/B,IAAyCF,QAAzC,SAAsDI,IAAtD,EAAP;AACD;;AAEDN,EAAAA,mBAAmB,CAACO,UAApB,GAAiC,SAASA,UAAT,CAAoBN,KAApB,EAA2BC,QAA3B,EAA8C;AAAA,QACzDC,SADyD,GAC3CF,KAD2C,CACpEC,QADoE;;AAAA,uCAANI,IAAM;AAANA,MAAAA,IAAM;AAAA;;AAE7E,QAAIH,SAAS,IAAI,IAAjB,EAAuB;AACrB,aAAOK,iBAAMD,UAAN,0BAAiBN,KAAjB,EAAwBC,QAAxB,SAAqCI,IAArC,EAAP;AACD;;AACD,WAAON,mBAAmB,MAAnB,UAAoBC,KAApB,EAA2BC,QAA3B,SAAwCI,IAAxC,EAAP;AACD,GAND;;AAQA,MAAMG,cAAc,GAAG,wBAAQf,IAAR,CAAvB;AAEA,MAAMgB,eAAe,GAAGd,MAAM,GAAGI,mBAAH,GAAyBR,MAAvD;AAEA,MAAMmB,SAAS,GAAG,qBAAI,CAACF,cAAD,EAAiBC,eAAjB,CAAJ,EAAuCb,IAAvC,CAAlB;AACAc,EAAAA,SAAS,CAACJ,UAAV,GAAuB,qBAAI,CACzBG,eAAe,CAACH,UADS,EAEzBE,cAAc,CAACF,UAFU,CAAJ,YAGjBV,IAHiB,iBAAvB;AAKA,SAAOc,SAAP;AACD","sourcesContent":["import { arrayOf, array } from 'prop-types';\nimport and from './and';\nimport uniqueArray from './uniqueArray';\n\nconst unique = uniqueArray();\n\nexport default function uniqueArrayOfTypeValidator(type, ...rest) {\n  if (typeof type !== 'function') {\n    throw new TypeError('type must be a validator function');\n  }\n\n  let mapper = null;\n  let name = 'uniqueArrayOfType';\n\n  if (rest.length === 1) {\n    if (typeof rest[0] === 'function') {\n      ([mapper] = rest);\n    } else if (typeof rest[0] === 'string') {\n      ([name] = rest);\n    } else {\n      throw new TypeError('single input must either be string or function');\n    }\n  } else if (rest.length === 2) {\n    if (typeof rest[0] === 'function' && typeof rest[1] === 'string') {\n      ([mapper, name] = rest);\n    } else {\n      throw new TypeError('multiple inputs must be in [function, string] order');\n    }\n  } else if (rest.length > 2) {\n    throw new TypeError('only [], [name], [mapper], and [mapper, name] are valid inputs');\n  }\n\n  function uniqueArrayOfMapped(props, propName, ...args) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return null;\n    }\n\n    const values = propValue.map(mapper);\n    return unique({ ...props, [propName]: values }, propName, ...args);\n  }\n\n  uniqueArrayOfMapped.isRequired = function isRequired(props, propName, ...args) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return array.isRequired(props, propName, ...args);\n    }\n    return uniqueArrayOfMapped(props, propName, ...args);\n  };\n\n  const arrayValidator = arrayOf(type);\n\n  const uniqueValidator = mapper ? uniqueArrayOfMapped : unique;\n\n  const validator = and([arrayValidator, uniqueValidator], name);\n  validator.isRequired = and([\n    uniqueValidator.isRequired,\n    arrayValidator.isRequired,\n  ], `${name}.isRequired`);\n\n  return validator;\n}\n"],"file":"uniqueArrayOf.js"}},"error":null,"hash":"f18da8dad5412de9e560004b0c448d7a","cacheData":{"env":{}}}