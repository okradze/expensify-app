{"id":"../node_modules/airbnb-prop-types/build/componentWithName.js","dependencies":[{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\componentWithName.js.map","includedInParent":true,"mtime":1552029750668},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\package.json","includedInParent":true,"mtime":1552373169349},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\.babelrc","includedInParent":true,"mtime":1551890671600},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\package.json","includedInParent":true,"mtime":1552029750668},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\.babelrc","includedInParent":true,"mtime":1552029750668},{"name":"react","loc":{"line":8,"column":44},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\componentWithName.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\react\\index.js"},{"name":"is-regex","loc":{"line":10,"column":46},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\componentWithName.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\is-regex\\index.js"},{"name":"array.prototype.find","loc":{"line":12,"column":53},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\componentWithName.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\array.prototype.find\\index.js"},{"name":"./helpers/getComponentName","loc":{"line":14,"column":55},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\componentWithName.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\helpers\\getComponentName.js"},{"name":"./helpers/wrapValidator","loc":{"line":16,"column":52},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\componentWithName.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\helpers\\wrapValidator.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = componentWithName;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _isRegex = _interopRequireDefault(require(\"is-regex\"));\n\nvar _arrayPrototype = _interopRequireDefault(require(\"array.prototype.find\"));\n\nvar _getComponentName = _interopRequireDefault(require(\"./helpers/getComponentName\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction stripHOCs(fullName, namesOfHOCsToStrip) {\n  var innerName = fullName;\n\n  while (/\\([^()]*\\)/g.test(innerName)) {\n    var HOC = innerName;\n    var previousHOC = void 0;\n\n    do {\n      previousHOC = HOC;\n      HOC = previousHOC.replace(/\\([^()]*\\)/g, '');\n    } while (previousHOC !== HOC);\n\n    if (namesOfHOCsToStrip.indexOf(HOC) === -1) {\n      return innerName;\n    }\n\n    innerName = innerName.replace(RegExp(\"^\".concat(HOC, \"\\\\(|\\\\)$\"), 'g'), '');\n  }\n\n  return innerName;\n}\n\nfunction hasName(name, namesOfHOCsToStrip, propValue, propName, componentName) {\n  for (var _len = arguments.length, rest = new Array(_len > 5 ? _len - 5 : 0), _key = 5; _key < _len; _key++) {\n    rest[_key - 5] = arguments[_key];\n  }\n\n  if (Array.isArray(propValue)) {\n    return (0, _arrayPrototype[\"default\"])(propValue.map(function (item) {\n      return hasName.apply(void 0, [name, namesOfHOCsToStrip, item, propName, componentName].concat(rest));\n    }), Boolean) || null;\n  }\n\n  if (!_react[\"default\"].isValidElement(propValue)) {\n    return new TypeError(\"\".concat(componentName, \".\").concat(propName, \" is not a valid React element\"));\n  }\n\n  var type = propValue.type;\n  var componentNameFromType = (0, _getComponentName[\"default\"])(type);\n  var innerComponentName = namesOfHOCsToStrip.length > 0 ? stripHOCs(componentNameFromType, namesOfHOCsToStrip) : componentNameFromType;\n\n  if ((0, _isRegex[\"default\"])(name) && !name.test(innerComponentName)) {\n    return new TypeError(\"`\".concat(componentName, \".\").concat(propName, \"` only accepts components matching the regular expression \").concat(name));\n  }\n\n  if (!(0, _isRegex[\"default\"])(name) && innerComponentName !== name) {\n    return new TypeError(\"`\".concat(componentName, \".\").concat(propName, \"` only accepts components named \").concat(name, \", got \").concat(innerComponentName));\n  }\n\n  return null;\n}\n\nfunction componentWithName(name) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (typeof name !== 'string' && !(0, _isRegex[\"default\"])(name)) {\n    throw new TypeError('name must be a string or a regex');\n  }\n\n  var passedOptions = Object.keys(options);\n\n  if (passedOptions.length > 1 || passedOptions.length === 1 && passedOptions[0] !== 'stripHOCs') {\n    throw new TypeError(\"The only options supported are: \\u201CstripHOCs\\u201D, got: \\u201C\".concat(passedOptions.join('”, “'), \"\\u201D\"));\n  }\n\n  var _options$stripHOCs = options.stripHOCs,\n      namesOfHOCsToStrip = _options$stripHOCs === void 0 ? [] : _options$stripHOCs;\n  var allHOCNamesAreValid = namesOfHOCsToStrip.every(function (x) {\n    if (typeof x !== 'string' || /[()]/g.test(x)) {\n      return false;\n    }\n\n    return /^(?:[a-z][a-zA-Z0-9]+|[A-Z][a-z][a-zA-Z0-9]+)$/.test(x);\n  });\n\n  if (!allHOCNamesAreValid) {\n    throw new TypeError('every provided HOC name must be a string with no parens, and in camelCase');\n  }\n\n  function componentWithNameValidator(props, propName, componentName) {\n    var propValue = props[propName];\n\n    if (props[propName] == null) {\n      return null;\n    }\n\n    for (var _len2 = arguments.length, rest = new Array(_len2 > 3 ? _len2 - 3 : 0), _key2 = 3; _key2 < _len2; _key2++) {\n      rest[_key2 - 3] = arguments[_key2];\n    }\n\n    return hasName.apply(void 0, [name, namesOfHOCsToStrip, propValue, propName, componentName].concat(rest));\n  }\n\n  componentWithNameValidator.isRequired = function componentWithNameRequired(props, propName, componentName) {\n    var propValue = props[propName];\n\n    if (propValue == null) {\n      return new TypeError(\"`\".concat(componentName, \".\").concat(propName, \"` requires at least one component named \").concat(name));\n    }\n\n    for (var _len3 = arguments.length, rest = new Array(_len3 > 3 ? _len3 - 3 : 0), _key3 = 3; _key3 < _len3; _key3++) {\n      rest[_key3 - 3] = arguments[_key3];\n    }\n\n    return hasName.apply(void 0, [name, namesOfHOCsToStrip, propValue, propName, componentName].concat(rest));\n  };\n\n  return (0, _wrapValidator[\"default\"])(componentWithNameValidator, \"componentWithName:\".concat(name), name);\n}\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/componentWithName.js"],"names":["stripHOCs","fullName","namesOfHOCsToStrip","innerName","test","HOC","previousHOC","replace","indexOf","RegExp","hasName","name","propValue","propName","componentName","rest","Array","isArray","map","item","Boolean","React","isValidElement","TypeError","type","componentNameFromType","innerComponentName","length","componentWithName","options","passedOptions","Object","keys","join","allHOCNamesAreValid","every","x","componentWithNameValidator","props","isRequired","componentWithNameRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport isRegex from 'is-regex';\nimport find from 'array.prototype.find';\n\nimport getComponentName from './helpers/getComponentName';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction stripHOCs(fullName, namesOfHOCsToStrip) {\n  let innerName = fullName;\n  while ((/\\([^()]*\\)/g).test(innerName)) {\n    let HOC = innerName;\n    let previousHOC;\n    do {\n      previousHOC = HOC;\n      HOC = previousHOC.replace(/\\([^()]*\\)/g, '');\n    } while (previousHOC !== HOC);\n\n    if (namesOfHOCsToStrip.indexOf(HOC) === -1) {\n      return innerName;\n    }\n    innerName = innerName.replace(RegExp(`^${HOC}\\\\(|\\\\)$`, 'g'), '');\n  }\n  return innerName;\n}\n\nfunction hasName(name, namesOfHOCsToStrip, propValue, propName, componentName, ...rest) {\n  if (Array.isArray(propValue)) {\n    return find(\n      propValue.map(item => hasName(\n        name,\n        namesOfHOCsToStrip,\n        item,\n        propName,\n        componentName,\n        ...rest,\n      )),\n      Boolean,\n    ) || null;\n  }\n\n  if (!React.isValidElement(propValue)) {\n    return new TypeError(\n      `${componentName}.${propName} is not a valid React element`,\n    );\n  }\n\n  const { type } = propValue;\n  const componentNameFromType = getComponentName(type);\n  const innerComponentName = namesOfHOCsToStrip.length > 0\n    ? stripHOCs(componentNameFromType, namesOfHOCsToStrip)\n    : componentNameFromType;\n\n  if (isRegex(name) && !name.test(innerComponentName)) {\n    return new TypeError(\n      `\\`${componentName}.${propName}\\` only accepts components matching the regular expression ${name}`,\n    );\n  }\n\n  if (!isRegex(name) && innerComponentName !== name) {\n    return new TypeError(\n      `\\`${componentName}.${propName}\\` only accepts components named ${name}, got ${innerComponentName}`,\n    );\n  }\n\n  return null;\n}\n\nexport default function componentWithName(\n  name,\n  options = {},\n) {\n  if (typeof name !== 'string' && !isRegex(name)) {\n    throw new TypeError('name must be a string or a regex');\n  }\n\n  const passedOptions = Object.keys(options);\n  if (passedOptions.length > 1 || (passedOptions.length === 1 && passedOptions[0] !== 'stripHOCs')) {\n    throw new TypeError(`The only options supported are: “stripHOCs”, got: “${passedOptions.join('”, “')}”`);\n  }\n  const { stripHOCs: namesOfHOCsToStrip = [] } = options;\n\n  const allHOCNamesAreValid = namesOfHOCsToStrip.every((x) => {\n    if (typeof x !== 'string' || /[()]/g.test(x)) {\n      return false;\n    }\n    return /^(?:[a-z][a-zA-Z0-9]+|[A-Z][a-z][a-zA-Z0-9]+)$/.test(x);\n  });\n  if (!allHOCNamesAreValid) {\n    throw new TypeError('every provided HOC name must be a string with no parens, and in camelCase');\n  }\n\n  function componentWithNameValidator(props, propName, componentName, ...rest) {\n    const { [propName]: propValue } = props;\n    if (props[propName] == null) {\n      return null;\n    }\n    return hasName(name, namesOfHOCsToStrip, propValue, propName, componentName, ...rest);\n  }\n\n  componentWithNameValidator.isRequired = function componentWithNameRequired(\n    props,\n    propName,\n    componentName,\n    ...rest\n  ) {\n    const { [propName]: propValue } = props;\n    if (propValue == null) {\n      return new TypeError(`\\`${componentName}.${propName}\\` requires at least one component named ${name}`);\n    }\n    return hasName(name, namesOfHOCsToStrip, propValue, propName, componentName, ...rest);\n  };\n\n  return wrapValidator(componentWithNameValidator, `componentWithName:${name}`, name);\n}\n"],"file":"componentWithName.js"}},"error":null,"hash":"893538ef5538485d925d2ca02acb3925","cacheData":{"env":{}}}