{"id":"../node_modules/react-dates/lib/utils/noflip.js","dependencies":[{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\package.json","includedInParent":true,"mtime":1552376831688},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\.babelrc","includedInParent":true,"mtime":1551890671600},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\react-dates\\package.json","includedInParent":true,"mtime":1552029753020},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\react-dates\\.babelrc","includedInParent":true,"mtime":1552029753020}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = noflip;\nvar NOFLIP = '/* @noflip */'; // Appends a noflip comment to a style rule in order to prevent it from being automatically\n// flipped in RTL contexts. This should be used only in situations where the style must remain\n// unflipped regardless of direction context. See: https://github.com/kentcdodds/rtl-css-js#usage\n\nfunction noflip(value) {\n  if (typeof value === 'number') return \"\".concat(value, \"px \").concat(NOFLIP);\n  if (typeof value === 'string') return \"\".concat(value, \" \").concat(NOFLIP);\n  throw new TypeError('noflip expects a string or a number');\n}"},"sourceMaps":{"js":{"mappings":[{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../node_modules/react-dates/lib/utils/noflip.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}}],"sources":{"../node_modules/react-dates/lib/utils/noflip.js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = noflip;\nvar NOFLIP = '/* @noflip */'; // Appends a noflip comment to a style rule in order to prevent it from being automatically\n// flipped in RTL contexts. This should be used only in situations where the style must remain\n// unflipped regardless of direction context. See: https://github.com/kentcdodds/rtl-css-js#usage\n\nfunction noflip(value) {\n  if (typeof value === 'number') return \"\".concat(value, \"px \").concat(NOFLIP);\n  if (typeof value === 'string') return \"\".concat(value, \" \").concat(NOFLIP);\n  throw new TypeError('noflip expects a string or a number');\n}"},"lineCount":15}},"error":null,"hash":"b37beb4c4b46c67f63041baebe7dd421","cacheData":{"env":{}}}