{"id":"../node_modules/airbnb-prop-types/build/integer.js","dependencies":[{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\integer.js.map","includedInParent":true,"mtime":1552029750668},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\package.json","includedInParent":true,"mtime":1552391975889},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\.babelrc","includedInParent":true,"mtime":1552388372836},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\package.json","includedInParent":true,"mtime":1552029750668},{"name":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\.babelrc","includedInParent":true,"mtime":1552029750668},{"name":"./helpers/isInteger","loc":{"line":8,"column":48},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\integer.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\helpers\\isInteger.js"},{"name":"./helpers/wrapValidator","loc":{"line":10,"column":52},"parent":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\integer.js","resolved":"C:\\Users\\Psycho\\Desktop\\react\\expensify-app\\node_modules\\airbnb-prop-types\\build\\helpers\\wrapValidator.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _isInteger = _interopRequireDefault(require(\"./helpers/isInteger\"));\n\nvar _wrapValidator = _interopRequireDefault(require(\"./helpers/wrapValidator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction requiredInteger(props, propName, componentName) {\n  var propValue = props[propName];\n\n  if (propValue == null || !(0, _isInteger[\"default\"])(propValue)) {\n    return new RangeError(\"\".concat(propName, \" in \").concat(componentName, \" must be an integer\"));\n  }\n\n  return null;\n}\n\nvar validator = function integer(props, propName) {\n  var propValue = props[propName];\n\n  if (propValue == null) {\n    return null;\n  }\n\n  for (var _len = arguments.length, rest = new Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    rest[_key - 2] = arguments[_key];\n  }\n\n  return requiredInteger.apply(void 0, [props, propName].concat(rest));\n};\n\nvalidator.isRequired = requiredInteger;\n\nvar _default = function _default() {\n  return (0, _wrapValidator[\"default\"])(validator, 'integer');\n};\n\nexports[\"default\"] = _default;\n"},"sourceMaps":{"js":{"version":3,"sources":["../src/integer.js"],"names":["requiredInteger","props","propName","componentName","propValue","RangeError","validator","integer","rest","isRequired"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,QAAhC,EAA0CC,aAA1C,EAAyD;AAAA,MACnCC,SADmC,GACrBH,KADqB,CAC9CC,QAD8C;;AAEvD,MAAIE,SAAS,IAAI,IAAb,IAAqB,CAAC,2BAAUA,SAAV,CAA1B,EAAgD;AAC9C,WAAO,IAAIC,UAAJ,WAAkBH,QAAlB,iBAAiCC,aAAjC,yBAAP;AACD;;AACD,SAAO,IAAP;AACD;;AAED,IAAMG,SAAS,GAAG,SAASC,OAAT,CAAiBN,KAAjB,EAAwBC,QAAxB,EAA2C;AAAA,MACvCE,SADuC,GACzBH,KADyB,CAClDC,QADkD;;AAG3D,MAAIE,SAAS,IAAI,IAAjB,EAAuB;AACrB,WAAO,IAAP;AACD;;AAL0D,oCAANI,IAAM;AAANA,IAAAA,IAAM;AAAA;;AAO3D,SAAOR,eAAe,MAAf,UAAgBC,KAAhB,EAAuBC,QAAvB,SAAoCM,IAApC,EAAP;AACD,CARD;;AAUAF,SAAS,CAACG,UAAV,GAAuBT,eAAvB;;eAEe;AAAA,SAAM,+BAAcM,SAAd,EAAyB,SAAzB,CAAN;AAAA,C","sourcesContent":["import isInteger from './helpers/isInteger';\nimport wrapValidator from './helpers/wrapValidator';\n\nfunction requiredInteger(props, propName, componentName) {\n  const { [propName]: propValue } = props;\n  if (propValue == null || !isInteger(propValue)) {\n    return new RangeError(`${propName} in ${componentName} must be an integer`);\n  }\n  return null;\n}\n\nconst validator = function integer(props, propName, ...rest) {\n  const { [propName]: propValue } = props;\n\n  if (propValue == null) {\n    return null;\n  }\n\n  return requiredInteger(props, propName, ...rest);\n};\n\nvalidator.isRequired = requiredInteger;\n\nexport default () => wrapValidator(validator, 'integer');\n"],"file":"integer.js"}},"error":null,"hash":"c9d1cbc421a9effd739a7ebfb96c2255","cacheData":{"env":{}}}